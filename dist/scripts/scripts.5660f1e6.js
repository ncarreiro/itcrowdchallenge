"use strict";angular.module("itcrowdchallengeApp",["ngAnimate","ngAria","ngCookies","ngResource","ngSanitize","ngMaterial","ui.router","angular-websql",angularDragula(angular)]).factory("_",["$window",function(a){return a._}]).config(["$stateProvider","$urlRouterProvider",function(a,b){a.state("main",{url:"/",templateUrl:"views/main.html",controller:"MainCtrl",controllerAs:"main"}),b.when("","/"),b.otherwise("/")}]).run(["$rootScope","$webSql",function(a,b){a._=window._,a.db=b.openDatabase("tasksdb","1.0","Tasks DB",2097152),a.db.createTable("tasks",{task_id:{type:"INTEGER","null":"NOT NULL",primary:!0,auto_increment:!0},task_description:{type:"TEXT","null":"NOT NULL"}})}]),angular.module("itcrowdchallengeApp").controller("MainCtrl",["$scope","Api","dragulaService",function(a,b,c){b.getList().then(function(){b.setList()}),a.createTask=function(a){b.createTask(a)},a.updateTask=function(a){b.updateTask(a)},a.deleteTask=function(a){b.deleteTask(a)},a.deleteAllTasks=function(){b.deleteAllTasks()},c.options(a,"tasks-list",{moves:function(a,b,c){return"handle"===c.className}}),a.$on("task-item.drag",function(a,b){b.removeClass("moved")}),a.$on("task-item.drop",function(a,b){b.addClass("moved")}),a.$on("task-item.over",function(a,b,c){c.addClass("over")}),a.$on("task-item.out",function(a,b,c){c.removeClass("over")})}]),function(){function a(a,b,c,d){var e,f=function(){};return f.prototype.getList=function(){var b=a.db.selectAll("tasks").then(function(a){return a});return b},f.prototype.setList=function(){return a.taskList||(a.taskList=[]),f.prototype.getList().then(function(b){d.forEach(b.rows,function(b){a.taskList.push(b)})}),!0},f.prototype.createTask=function(b){return!b||b&&!b.task_description?(a.error="Please, enter the task description.",!1):(f.prototype.getList().then(function(f){var g;if(f){var h=d.find(f.rows,{task_description:b.task_description});if(h)return a.error="You already have one task with that description.",!1}delete a.error,d.maxBy(f.rows,function(a){g=a.task_id}),g||(g=0),e={task_id:g+1,task_description:b.task_description},a.db.insert("tasks",e),a.taskList.push(e),c.show(c.simple().textContent("Task created!").position("top"))}),!0)},f.prototype.updateTask=function(b){return b&&!b.task_description?c.show(c.simple().textContent("You can't save a blank task!.").position("top").hideDelay(3e3)):(a.db.update("tasks",{task_description:b.task_description},{task_id:b.task_id}),c.show(c.simple().textContent("Task updated!").position("top").hideDelay(3e3)),!0)},f.prototype.deleteTask=function(b){return e={task_id:b.task_id,task_description:b.task_description},a.db.del("tasks",{task_id:e.task_id}),a.taskList=d.remove(a.taskList,function(a){return a.task_id!==e.task_id}),c.show(c.simple().textContent("Task deleted!").position("top").hideDelay(3e3)),!0},f.prototype.deleteAllTasks=function(){return f.prototype.getList().then(function(b){d.forEach(b.rows,function(b){a.db.del("tasks",{task_id:b.task_id})})}),a.taskList=[],c.show(c.simple().textContent("All Tasks deleted!").position("top").hideDelay(3e3)),!0},new f}angular.module("itcrowdchallengeApp").service("Api",a),a.$inject=["$rootScope","$webSql","$mdToast","_"]}(),angular.module("itcrowdchallengeApp").run(["$templateCache",function(a){a.put("views/main.html",'<!-- <pre class="debug">{{taskList | json}}</pre> --> <div class="app-title"> <img class="mesh-logo" src="images/mesh-logo.5c6d2264.png"> <h1 class="center">Tasks List</h1> </div> <div class="tasks-list"> <h1 class="border">New Task</h1> <label>Type the Task Description and press Enter:</label> <span class="space"></span> <form ng-submit="createTask(newTask)"> <md-content class="add-task"> <md-input-container flex-gt-sm> <input type="text" name="newTask-task-description" ng-model="newTask.task_description" aria-label="newTask-description" maxlength="25"> <div class="space" ng-if="error"></div> <div class="error" ng-bind="error" ng-if="error"></div> </md-input-container> </md-content> </form> <span class="space"></span> <h1 class="border">Tasks List</h1> <md-content> <md-list dragula="&quot;task-list&quot;" dragula-model="taskList" flex> <div class="no-tasks" ng-if="!taskList || !taskList.length"> <h1 class="center">No Tasks saved.</h1> <h2 class="center">Add a new Task with the "New task" form.</h2> </div> <md-list-item class="task-item" ng-repeat="task in taskList" dragula-scope="$parent" ng-class="{\'hovered\': hover.item}" ng-mouseenter="hover.item = true;" ng-mouseleave="hover.item = false;"> <div class="task-id" ng-bind="\'#\' + task.task_id"></div> <div class="task-description"> <md-input-container flex-gt-sm> <input name="task-{{task.task_id}}-description" ng-model="task.task_description" aria-label="task-{{task.task_id}}-description" ng-blur="updateTask(task)" maxlength="25" required> </md-input-container> </div> <div class="task-actions"> <button aria-label="Delete" ng-click="deleteTask(task)"> <i class="material-icons">delete</i> </button> </div> </md-list-item> </md-list> </md-content> <md-button class="md-raised md-warn" aria-label="Delete" ng-click="deleteAllTasks()">Delete all tasks</md-button> </div>')}]);